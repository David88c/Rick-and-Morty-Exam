name: Deploy to Minikube

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        id: cache-docker-layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker buildx create --use
          docker buildx build --cache-from=type=local,src=/tmp/.buildx-cache --cache-to=type=local,dest=/tmp/.buildx-cache-new --push -t ${{ secrets.DOCKER_USERNAME }}/rick-and-morty-app:${{ github.sha }} .
          docker tag ${{ secrets.DOCKER_USERNAME }}/rick-and-morty-app:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/rick-and-morty-app:latest

      - name: Save new cache
        if: always()
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache-new
          key: ${{ runner.os }}-buildx-${{ github.sha }}

      - name: Set up Minikube
        run: |
          curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          chmod +x minikube
          sudo mv minikube /usr/local/bin/
          sudo minikube start --driver=none

      - name: Set up kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Set up Kubeconfig
        run: |
          mkdir -p $HOME/.kube
          sudo minikube update-context

      - name: Deploy to Minikube
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
          kubectl apply -f k8s/ingress.yaml

      - name: Wait for Deployment to be ready
        run: |
          kubectl rollout status deployment/rick-and-morty-app

      - name: Verify Deployment
        run: |
          kubectl get all
