name: Deploy to Minikube

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        id: cache-docker-layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker buildx create --use
          docker buildx build --cache-from=type=local,src=/tmp/.buildx-cache --cache-to=type=local,dest=/tmp/.buildx-cache-new --push -t david817/rick-and-morty:${{ github.sha }} .
          docker buildx build --cache-from=type=local,src=/tmp/.buildx-cache --cache-to=type=local,dest=/tmp/.buildx-cache-new --push -t david817/rick-and-morty:latest .

      - name: Save new cache
        if: always()
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache-new
          key: ${{ runner.os }}-buildx-${{ github.sha }}

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y conntrack
          curl -LO https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.24.2/crictl-v1.24.2-linux-amd64.tar.gz
          sudo tar -C /usr/local/bin -xzf crictl-v1.24.2-linux-amd64.tar.gz
          rm crictl-v1.24.2-linux-amd64.tar.gz

      - name: Install cri-dockerd
        run: |
          sudo apt-get update && sudo apt-get install -y git golang-go
          git clone https://github.com/Mirantis/cri-dockerd.git
          cd cri-dockerd
          sed -i 's/^go 1.22.0$/go 1.20/' go.mod  # Update the Go version
          mkdir bin
          go build -o bin/cri-dockerd
          sudo mv bin/cri-dockerd /usr/local/bin/
          sudo cp -a packaging/systemd/* /etc/systemd/system/
          sudo sed -i 's!/usr/bin/cri-dockerd!/usr/local/bin/cri-dockerd!' /etc/systemd/system/cri-docker.service
          sudo systemctl daemon-reload
          sudo systemctl enable cri-docker.service
          sudo systemctl enable --now cri-docker.socket

      - name: Set up Minikube
        run: |
          curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          chmod +x minikube
          sudo mv minikube /usr/local/bin/
          sudo minikube start --driver=none --container-runtime=docker --cri-socket=/var/run/cri-dockerd.sock

      - name: Set up kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Set up Kubeconfig
        run: |
          mkdir -p $HOME/.kube
          sudo minikube update-context

      - name: Deploy to Minikube
        run: |
          sed -i 's|image: .*$|image: david817/rick-and-morty:latest|g' k8s/deployment.yaml
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
          kubectl apply -f k8s/ingress.yaml

      - name: Wait for Deployment to be ready
        run: |
          kubectl rollout status deployment/rick-and-morty

      - name: Verify Deployment
        run: |
          kubectl get all
